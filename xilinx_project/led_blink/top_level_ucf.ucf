############################################################################
##
##  Xilinx, Inc. 2006            www.xilinx.com
##  ???? ???? 11 22:10:02 2015
##  Generated by MIG Version 3.92
##
############################################################################
##  File name :       mig_mis603.ucf
##
##  Details :     Constraints file
##                    FPGA family:       spartan6
##                    FPGA:              xc6slx25-ftg256
##                    Speedgrade:        -2
##                    Design Entry:      VERILOG
##                    Design:            without Test bench
##                    DCM Used:          Enable
##                    Compatible FPGA's: xc6slx16-ftg256
##                    No.Of Memory Controllers: 1
##
############################################################################
############################################################################
# VCC AUX VOLTAGE
############################################################################
CONFIG VCCAUX  = 3.3;
# Valid values are 2.5 and 3.3
############################################################################
# DDR2 requires the MCB to operate in Extended performance mode with higher Vccint
# specification to achieve maximum frequency. Therefore, the following CONFIG constraint
# follows the corresponding GUI option setting. However, DDR3 can operate at higher
# frequencies with any Vcciint value by operating MCB in extended mode. Please do not
# remove/edit the below constraint to avoid false errors.
############################################################################
CONFIG MCB_PERFORMANCE  = EXTENDED;


##################################################################################
# Timing Ignore constraints for paths crossing the clock domain
##################################################################################
#NET  "u_ddr3_mig/memc?_wrapper_inst/mcb_ui_top_inst/mcb_raw_wrapper_inst/selfrefresh_mcb_mode" TIG;
#NET  "u_ddr3_mig/c?_pll_lock" TIG;
#INST "u_ddr3_mig/memc?_wrapper_inst/mcb_ui_top_inst/mcb_raw_wrapper_inst/gen_term_calib.mcb_soft_calibration_top_inst/mcb_soft_calibration_inst/DONE_SOFTANDHARD_CAL*" TIG;
#Please uncomment the below TIG if used in a design which enables self-refresh mode
#NET "memc?_wrapper_inst/mcb_ui_top_inst/mcb_raw_wrapper_inst/gen_term_calib.mcb_soft_calibration_top_inst/mcb_soft_calibration_inst/SELFREFRESH_MCB_REQ" TIG;

############################################################################
## Memory Controller 3
## Memory Device: DDR3_SDRAM->MT41J128M16XX-125
## Frequency: 333.333 MHz
## Time Period: 3000 ps
## Supported Part Numbers: MT41J128M16HA-125
############################################################################
############################################################################
## Clock constraints
############################################################################
NET "clk_in" TNM_NET = "clk_in";
TIMESPEC TS_sys_clk_i = PERIOD "clk_in" 32 MHz HIGH 50 %;
NET "clk_in" LOC = T7;
NET "clk_in" IOSTANDARD = LVCMOS33;
## | PULLUP;
NET "rst_n_in" LOC = N16;
NET "rst_n_in" IOSTANDARD = LVCMOS18;
#############################################################################
##NET  "c3_calib_done"                               IOSTANDARD = LVCMOS33 ;
##NET  "c3_calib_done"                               LOC = "C8" ;
#############################################################################
### I/O TERMINATION
#############################################################################
#NET "mcb3_dram_dq[0]" IN_TERM = NONE;
#NET "mcb3_dram_dq[10]" IN_TERM = NONE;
#NET "mcb3_dram_dq[11]" IN_TERM = NONE;
#NET "mcb3_dram_dq[12]" IN_TERM = NONE;
#NET "mcb3_dram_dq[13]" IN_TERM = NONE;
#NET "mcb3_dram_dq[14]" IN_TERM = NONE;
#NET "mcb3_dram_dq[15]" IN_TERM = NONE;
#NET "mcb3_dram_dq[1]" IN_TERM = NONE;
#NET "mcb3_dram_dq[2]" IN_TERM = NONE;
#NET "mcb3_dram_dq[3]" IN_TERM = NONE;
#NET "mcb3_dram_dq[4]" IN_TERM = NONE;
#NET "mcb3_dram_dq[5]" IN_TERM = NONE;
#NET "mcb3_dram_dq[6]" IN_TERM = NONE;
#NET "mcb3_dram_dq[7]" IN_TERM = NONE;
#NET "mcb3_dram_dq[8]" IN_TERM = NONE;
#NET "mcb3_dram_dq[9]" IN_TERM = NONE;
#NET "mcb3_dram_dqs" IN_TERM = NONE;
#NET "mcb3_dram_dqs_n" IN_TERM = NONE;
#NET "mcb3_dram_udqs" IN_TERM = NONE;
#NET "mcb3_dram_udqs_n" IN_TERM = NONE;

############################################################################
# I/O STANDARDS
############################################################################
#NET "mcb3_dram_dq[0]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[10]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[11]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[12]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[13]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[14]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[15]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[1]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[2]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[3]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[4]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[5]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[6]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[7]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[8]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[9]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dq[0]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[10]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[11]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[12]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[13]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[14]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[15]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[1]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[2]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[3]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[4]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[5]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[6]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[7]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[8]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dq[9]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[0]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[10]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[11]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[12]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[13]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[1]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[2]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[3]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[4]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[5]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[6]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[7]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[8]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[9]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_a[0]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[10]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[11]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[12]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[13]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[1]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[2]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[3]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[4]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[5]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[6]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[7]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[8]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_a[9]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_ba[0]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_ba[1]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_ba[2]" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_ba[0]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_ba[1]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_ba[2]" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_dqs" IOSTANDARD = DIFF_SSTL15_II;
#NET "mcb3_dram_udqs" IOSTANDARD = DIFF_SSTL15_II;
#NET "mcb3_dram_dqs_n" IOSTANDARD = DIFF_SSTL15_II;
#NET "mcb3_dram_udqs_n" IOSTANDARD = DIFF_SSTL15_II;
#NET "mcb3_dram_ck" IOSTANDARD = DIFF_SSTL15_II;
#NET "mcb3_dram_ck_n" IOSTANDARD = DIFF_SSTL15_II;
#NET "mcb3_dram_cke" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_cke" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_ras_n" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_ras_n" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_cas_n" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_cas_n" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_we_n" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_we_n" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_odt" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_odt" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_reset_n" IOSTANDARD = LVCMOS15;
#NET "mcb3_dram_dm" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_dm" OUT_TERM = UNTUNED_50;
#NET "mcb3_dram_udm" IOSTANDARD = SSTL15_II;
#NET "mcb3_dram_udm" OUT_TERM = UNTUNED_50;
#NET "mcb3_rzq" IOSTANDARD = SSTL15_II;
#NET "mcb3_rzq" OUT_TERM = UNTUNED_50;
#NET "mcb3_zio" IOSTANDARD = SSTL15_II;
#NET "mcb3_zio" OUT_TERM = UNTUNED_50;
#############################################################################
## MCB 3
## Pin Location Constraints for Clock, Masks, Address, and Controls
#############################################################################
#NET "mcb3_dram_a[0]" LOC = K5;
#NET "mcb3_dram_a[10]" LOC = G6;
#NET "mcb3_dram_a[11]" LOC = E3;
#NET "mcb3_dram_a[12]" LOC = F3;
#NET "mcb3_dram_a[13]" LOC = F6;
#NET "mcb3_dram_a[1]" LOC = K6;
#NET "mcb3_dram_a[2]" LOC = D1;
#NET "mcb3_dram_a[3]" LOC = L4;
#NET "mcb3_dram_a[4]" LOC = G5;
#NET "mcb3_dram_a[5]" LOC = H4;
#NET "mcb3_dram_a[6]" LOC = H3;
#NET "mcb3_dram_a[7]" LOC = D3;
#NET "mcb3_dram_a[8]" LOC = B2;
#NET "mcb3_dram_a[9]" LOC = A2;
#NET "mcb3_dram_ba[0]" LOC = C3;
#NET "mcb3_dram_ba[1]" LOC = C2;
#NET "mcb3_dram_ba[2]" LOC = B1;
#NET "mcb3_dram_cas_n" LOC = H5;
#NET "mcb3_dram_ck" LOC = E2;
#NET "mcb3_dram_ck_n" LOC = E1;
#NET "mcb3_dram_cke" LOC = F4;
#NET "mcb3_dram_dm" LOC = J4;
#NET "mcb3_dram_dq[0]" LOC = K2;
#NET "mcb3_dram_dq[10]" LOC = M2;
#NET "mcb3_dram_dq[11]" LOC = M1;
#NET "mcb3_dram_dq[12]" LOC = P2;
#NET "mcb3_dram_dq[13]" LOC = P1;
#NET "mcb3_dram_dq[14]" LOC = R2;
#NET "mcb3_dram_dq[15]" LOC = R1;
#NET "mcb3_dram_dq[1]" LOC = K1;
#NET "mcb3_dram_dq[2]" LOC = J3;
#NET "mcb3_dram_dq[3]" LOC = J1;
#NET "mcb3_dram_dq[4]" LOC = F2;
#NET "mcb3_dram_dq[5]" LOC = F1;
#NET "mcb3_dram_dq[6]" LOC = G3;
#NET "mcb3_dram_dq[7]" LOC = G1;
#NET "mcb3_dram_dq[8]" LOC = L3;
#NET "mcb3_dram_dq[9]" LOC = L1;
#NET "mcb3_dram_dqs" LOC = H2;
#NET "mcb3_dram_dqs_n" LOC = H1;
#NET "mcb3_dram_odt" LOC = L5;
#NET "mcb3_dram_ras_n" LOC = J6;
#NET "mcb3_dram_reset_n" LOC = E4;
#NET "mcb3_dram_udm" LOC = K3;
#NET "mcb3_dram_udqs" LOC = N3;
#NET "mcb3_dram_udqs_n" LOC = N1;
#NET "mcb3_dram_we_n" LOC = C1;

##################################################################################
#RZQ is required for all MCB designs.   Do not move the location #
#of this pin for ES devices.For production devices, RZQ can be moved to any #
#valid package pin within the MCB bank.For designs using Calibrated Input Termination, #
#a 2R resistor should be connected between RZQand ground, where R is the desired#
#input termination value.  Otherwise, RZQ should be left as a no-connect (NC) pin.#
##################################################################################
#NET "mcb3_rzq" LOC = M4;
##################################################################################
#ZIO is only required for MCB designs using Calibrated Input Termination.#
#ZIO can be moved to any valid package pin (i.e. bonded IO) within the#
#MCB bank but must be left as a no-connect (NC) pin.#
##################################################################################
#NET "mcb3_zio" LOC = M5;
##################################################################################

##DSI HS LINES
#NET "dphy_clk_hs_out_p" LOC = B15;
##15_p
#NET "dphy_clk_hs_out_n" LOC = B16;
##15_n
#NET "dphy_data_hs_out_p[0]" LOC = F15;
##30_p
#NET "dphy_data_hs_out_n[0]" LOC = F16;
##30_n
#NET "dphy_data_hs_out_p[1]" LOC = H15;
##24_p
#NET "dphy_data_hs_out_n[1]" LOC = H16;
##24_n
#NET "dphy_data_hs_out_p[2]" LOC = D14;
##07p
#NET "dphy_data_hs_out_n[2]" LOC = D16;
##07n
#NET "dphy_data_hs_out_p[3]" LOC = C15;
##07p
#NET "dphy_data_hs_out_n[3]" LOC = C16;
##07n
#
##DSI LP LINES
#NET "dphy_data_lp_out_p[0]" LOC = E16;
##28_n
#NET "dphy_data_lp_out_p[0]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_n[0]" LOC = G14;
##32_p
#NET "dphy_data_lp_out_n[0]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_p[1]" LOC = G16;
##21_n
#NET "dphy_data_lp_out_p[1]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_n[1]" LOC = G12;
##28_p
#NET "dphy_data_lp_out_n[1]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_p[2]" LOC = G11;
##4_n
#NET "dphy_data_lp_out_p[2]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_n[2]" LOC = F13;
##11_p
#NET "dphy_data_lp_out_n[2]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_p[3]" LOC = F14;
##4_n
#NET "dphy_data_lp_out_p[3]" IOSTANDARD = LVCMOS18;
#
#NET "dphy_data_lp_out_n[3]" LOC = E15;
##11_p
#NET "dphy_data_lp_out_n[3]" IOSTANDARD = LVCMOS18;
#
#
#NET "dphy_clk_lp_out_p" LOC = E12;
##11_n
#NET "dphy_clk_lp_out_p" IOSTANDARD = LVCMOS18;
#
#NET "dphy_clk_lp_out_n" LOC = F12;
##19_p
#NET "dphy_clk_lp_out_n" IOSTANDARD = LVCMOS18;

#HDMI
NET "hdmi_data[23]" LOC = E7;
NET "hdmi_data[23]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[22]" LOC = D8;
NET "hdmi_data[22]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[21]" LOC = F7;
NET "hdmi_data[21]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[20]" LOC = D6;
NET "hdmi_data[20]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[19]" LOC = D5;
NET "hdmi_data[19]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[18]" LOC = C5;
NET "hdmi_data[18]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[17]" LOC = A5;
NET "hdmi_data[17]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[16]" LOC = C6;
NET "hdmi_data[16]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[15]" LOC = B6;
NET "hdmi_data[15]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[14]" LOC = A6;
NET "hdmi_data[14]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[13]" LOC = E6;
NET "hdmi_data[13]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[12]" LOC = C7;
NET "hdmi_data[12]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[11]" LOC = A7;
NET "hdmi_data[11]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[10]" LOC = C8;
NET "hdmi_data[10]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[9]" LOC = B8;
NET "hdmi_data[9]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[8]" LOC = A8;
NET "hdmi_data[8]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[7]" LOC = D9;
NET "hdmi_data[7]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[6]" LOC = C9;
NET "hdmi_data[6]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[5]" LOC = A9;
NET "hdmi_data[5]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[4]" LOC = E8;
NET "hdmi_data[4]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[3]" LOC = B10;
NET "hdmi_data[3]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[2]" LOC = A10;
NET "hdmi_data[2]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[1]" LOC = E10;
NET "hdmi_data[1]" IOSTANDARD = LVCMOS33;
NET "hdmi_data[0]" LOC = E11;
NET "hdmi_data[0]" IOSTANDARD = LVCMOS33;
#NET "hdmi_rst_n " LOC = A12  | IOSTANDARD = LVCMOS33;
NET "hdmi_hs" LOC = C11;
NET "hdmi_hs" IOSTANDARD = LVCMOS33;
NET "hdmi_vs" LOC = B12;
NET "hdmi_vs" IOSTANDARD = LVCMOS33;
NET "hdmi_de" LOC = A11;
NET "hdmi_de" IOSTANDARD = LVCMOS33;
NET "hdmi_clk" LOC = C10;
NET "hdmi_clk" IOSTANDARD = LVCMOS33;

#I2C
NET "i2c_scl" LOC = C13;
NET "i2c_scl" IOSTANDARD = LVCMOS33;
NET "i2c_sda" LOC = A13;
NET "i2c_sda" IOSTANDARD = LVCMOS33;

#USART
NET "usart_rxd" LOC = F9 | IOSTANDARD = LVCMOS33;
#NET "usart_txd" LOC = F10 | IOSTANDARD = LVCMOS33;

#LED
NET "led_out" LOC = R7 | IOSTANDARD = LVCMOS33;
